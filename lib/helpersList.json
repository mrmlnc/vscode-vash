[
  {
    "label": "raw",
    "detail": "By default, all content that passes from a model to a template is HTML encoded. This method passes content without HTML encoded.",
    "documentation": "@html.raw(\"<text>\")"
  },
  {
    "label": "escape",
    "detail": "This method passes content with HTML encoded.",
    "documentation": "@html.escape(\"<text>\")"
  },
  {
    "label": "tplcache",
    "detail": "tplcache can use for set global index for a compiled template. this will initialized when using \"vash.install\", or can initialize manualy. for more see \"vash.install\", \"vash.uninstall\" and \"vash.lookup\"",
    "documentation": "vash.helpers.tplcache[name_of_precompiled_template]"
  },
  {
    "label": "extend",
    "detail": "Used to inheritance for view templates.",
    "documentation": "@html.extend(parent_path, callback)"
  },
  {
    "label": "block",
    "detail": "A block is essentially a placeholder within a template that can be overridden via another call to \"vash.helpers.block\", or modified using \"vash.helpers.append\" and \"vash.helpers.prepend\".",
    "documentation": "@html.block(name, callback)"
  },
  {
    "label": "append",
    "detail": "Is a way to control the content of a block from within an extending template. In this way, it allows templates to invert control over content \"above\" them.",
    "documentation": "@html.append(name, callback)"
  },
  {
    "label": "prepend",
    "detail": "Behaves nearly the same as \"vash.helpers.append\" except that it places content at the beginning of a block instead of at the end. ",
    "documentation": "@html.prepend(name, callback)"
  },
  {
    "label": "include",
    "detail": "Used to literally include the contents of another template.",
    "documentation": "@html.include(name, model)"
  },
  {
    "label": "highlight",
    "detail": "Used to syntax highlighting.",
    "documentation": "@html.highlight(language, callback)"
  }
]
